package com.weishuqi.like.web;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Bean;
import org.springframework.core.annotation.Order;
import org.springframework.scheduling.TaskScheduler;
import org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler;
import org.springframework.stereotype.Component;

import javax.annotation.PostConstruct;
import java.util.Date;

@Component
public class LoveAsciiArt {


    @Autowired
    private TaskScheduler taskScheduler;

    @Bean
    public TaskScheduler taskScheduler() {
        ThreadPoolTaskScheduler scheduler = new ThreadPoolTaskScheduler();
        scheduler.setPoolSize(5);
        scheduler.setThreadNamePrefix("TaskScheduler-");
        return scheduler;
    }

    @PostConstruct
    @Order(1)  // 数字越小优先级越高
    private  void printLove1() {
        String loveAsciiArt =
                " ___          ___       ________  ___      ___ _______            ___    ___ ________  ___  ___     \n" +
                        "|\\  \\        |\\  \\     |\\   __  \\|\\  \\    /  /|\\  ___ \\          |\\  \\  /  /|\\   __  \\|\\  \\|\\  \\    \n" +
                        "\\ \\  \\       \\ \\  \\    \\ \\  \\|\\  \\ \\  \\  /  / | \\   __/|         \\ \\  \\/  / | \\  \\|\\  \\ \\  \\\\\\  \\   \n" +
                        " \\ \\  \\       \\ \\  \\    \\ \\  \\\\\\  \\ \\  \\/  / / \\ \\  \\_|/__        \\ \\    / / \\ \\  \\\\\\  \\ \\  \\\\\\  \\  \n" +
                        "  \\ \\  \\       \\ \\  \\____\\ \\  \\\\\\  \\ \\    / /   \\ \\  \\_|\\ \\        \\/  /  /   \\ \\  \\\\\\  \\ \\  \\\\\\  \\ \n" +
                        "   \\ \\__\\       \\ \\_______\\ \\_______\\ \\__/ /     \\ \\_______\\     __/  / /      \\ \\_______\\ \\_______\\\n" +
                        "    \\|__|        \\|_______|\\|_______|\\|__|/       \\|_______|    |\\___/ /        \\|_______|\\|_______|\n" +
                        "                                                                \\|___|/                             \n";

        System.out.println(loveAsciiArt);
    }

    @PostConstruct
    @Order(2)  // 数字越小优先级越高
    private  void printLove2() {
            // 延迟6秒执行
            taskScheduler.schedule(() -> {
                // 执行你的初始化逻辑
            }, new Date(System.currentTimeMillis() + 6000));

        System.err.println("         ##             #           #    #      #        #   #        #    # #    #     #      #            #          \n" +
                "  #      ##  #          ##           #    #     ##    #  ##  ## #     ##############    ##    ###          ###         \n" +
                "  ##  #########        ##      #     ##   ##    ##    ## ## ######    ##  ## ##  ##     #    ## ##           ##        \n" +
                "   ##    ##        ##############     # #####   ##    ## ## # ##      ##  ## ##  ##   ##### ##   ##          ##        \n" +
                "   #   #######        ##           #      ## #  ##    ## ###   ##     ###### ######    #   ##     ###         ##       \n" +
                "    #    ##   #       ##  #         #     ## ## ##    # ###    #      #   #  # # #     ## #  ##### #         ###       \n" +
                " ###############     ##   ##        ##    ## ## ##      #########          ##  ## #   # ##                   ####      \n" +
                "   ##  #     #       ##   ## #      ##  # ## ## ##      ## #  ##     ###############  # ##  ####   #        ## ##      \n" +
                "   ##  ########     ###########        ## ## ## ##      ## ## ##          ##  ##      ##### #  # # #        ##  ##     \n" +
                "   ##  ##   ##     ####   ##          #  ### ## ##      ## ## ##        ##      ####    ##  #### # #       ##   ##     \n" +
                "   ##  #######     # ##   ##       #  #  ##  ## ##      ## ## ##     ###   # #    #     #####  # # #       ##    ##    \n" +
                "   ## ###   ##    #  ##   ##        ###   ## #  ##      # #####       ##############  ####  #### # #      ##     ##    \n" +
                "   ### #######       ##   ##        ###   ##    ##       ## ##   #    ##  ## ##  ##     ##  #  # # #      ##      ##   \n" +
                "  ###  ##   ##       ##   ##   #    ###  # ##   ##      ##  ##   #    ##  ## ##  ##     ##  #  #   #     ##       ###  \n" +
                "   #   ##  ###       ############   ##   #  ## ###     ##   #######   ###### ######     ##  # ## ###    ##         ### \n" +
                "       #    #        #               #  #   #   #    ##      #####    #   #  #   #      #   #  #  #    #            #  \n");


        System.err.println("  ,--,                                    ,--,     ,---,                            ___     \n" +
                ",--.'|                                  ,--.'|   ,--.' |                          ,--.'|_   \n" +
                "|  | :     ,---.                        |  | :   |  |  :       ,---.              |  | :,'  \n" +
                ":  : '    '   ,'\\                       :  : '   :  :  :      '   ,'\\   .--.--.   :  : ' :  \n" +
                "|  ' |   /   /   |   ,---.     ,--.--.  |  ' |   :  |  |,--. /   /   | /  /    '.;__,'  /   \n" +
                "'  | |  .   ; ,. :  /     \\   /       \\ '  | |   |  :  '   |.   ; ,. :|  :  /`./|  |   |    \n" +
                "|  | :  '   | |: : /    / '  .--.  .-. ||  | :   |  |   /' :'   | |: :|  :  ;_  :__,'| :    \n" +
                "'  : |__'   | .; :.    ' /    \\__\\/: . .'  : |__ '  :  | | |'   | .; : \\  \\    `. '  : |__  \n" +
                "|  | '.'|   :    |'   ; :__   ,\" .--.; ||  | '.'||  |  ' | :|   :    |  `----.   \\|  | '.'| \n" +
                ";  :    ;\\   \\  / '   | '.'| /  /  ,.  |;  :    ;|  :  :_:,' \\   \\  /  /  /`--'  /;  :    ; \n" +
                "|  ,   /  `----'  |   :    :;  :   .'   \\  ,   / |  | ,'      `----'  '--'.     / |  ,   /  \n" +
                " ---`-'            \\   \\  / |  ,     .-./---`-'  `--''                  `--'---'   ---`-'   \n" +
                "                    `----'   `--`---'                                                       \n");


        System.err.println("   #                         #                  #                #  \n" +
                "   ##               ###########     ##############  ############### \n" +
                "   ##         #       ##   ##             ##              ##        \n" +
                "   ##  #########      ##   ##         #  ##    #         ##         \n" +
                " ######    ##         ##   ##         ###########    #  ##       #  \n" +
                "   ##      ##         ##   ##  #      ##      ##     ############## \n" +
                "   ##      ##     ###############     ##  ##  ##     ## ##   ## ##  \n" +
                "   ## #    ##         ##   ##         ##  ##  ##     ## ##   ## ##  \n" +
                "   ###     ##         ##   ##         ##  ##  ##     ## ####### ##  \n" +
                "  ###      ##         ##   ##         ##  ##  ##     ## ##   ## ##  \n" +
                " ####      ##         ##   ##         ##  ##  ##     ## ##   ## ##  \n" +
                " # ##      ##         ##   ##         #   ##  #      ## ####### ##  \n" +
                "   ##      ##        ##    ##            ## #        ## ##   ## ##  \n" +
                "   ##    # ##        ##    ##           ##   ##      ## ##   ## ##  \n" +
                "  ###     ###       ##     ##         ##      ####   #############  \n" +
                "   #       #       #       #        ##          #    #          #   \n");

    }



    @PostConstruct
    @Order(3)  // 数字越小优先级越高
    private  void printLove3() {

    }


}
